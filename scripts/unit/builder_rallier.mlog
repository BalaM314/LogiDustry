print "Builder Rallier v1.1 by SBytes"
print "Rallies 9 megas or polies around this processor"
print "Null: Off (unbind)"
print "Copper: Highest tier unit"
print "Lead: Mega only"
print "Metaglass: Poly only"

# [sky]Builder Rallier v1.1
# [green]by SBytes

# [white]Rallies 9 megas or polies around this processor

# [gray] = Off (unbind)[]
#  = Highest possible
#  = 
#  = 

op mul thisFlag @thisx @maph
op add thisFlag thisFlag @thisy

start:

sensor setting sorter1 @config
jump disabled equal setting null
jump disabled notEqual setting cachedSetting


# Bind counter array
op mul counterJump unitIndex 2
op add @counter @counter counterJump
    ubind unitRef1
    jump unitSel_end always 0
    ubind unitRef2
    jump unitSel_end always 0
    ubind unitRef3
    jump unitSel_end always 0
    ubind unitRef4
    jump unitSel_end always 0
    ubind unitRef5
    jump unitSel_end always 0
    ubind unitRef6
    jump unitSel_end always 0
    ubind unitRef7
    jump unitSel_end always 0
    ubind unitRef8
    jump unitSel_end always 0
    ubind unitRef9
unitSel_end:

sensor unitFlag @unit @flag
jump bind notEqual unitFlag thisFlag # stolen / deflaged?
sensor unitCtrl @unit @controlled
jump bind greaterThanEq unitCtrl 2 # player or formation controlled
sensor unitDead @unit @dead
jump bind_end equal unitDead 0 # dead unit
    bind:

    jump bind_poly equal setting @metaglass # metaglass setting = poly only

    bind_mega:
        ubind @mega
        jump bind_mega_end equal @unit null
        set anchorUnit @unit
        bind_mega_loop:
            sensor anchorDead anchorUnit @dead
            jump bind_mega_end equal anchorDead 1
            ubind @mega
            jump bind_mega_end equal @unit anchorUnit
            sensor unitFlag @unit @flag
            jump bind_mega_loop notEqual unitFlag 0
            sensor unitCtrl @unit @controlled
            jump bind_mega_loop greaterThanEq unitCtrl 2
            jump bind_continue always 0
    bind_mega_end:

    jump nextUnit equal setting @lead # lead setting = mega only


    bind_poly:
        ubind @poly
        jump bind_poly_end equal @unit null
        set anchorUnit @unit
        bind_poly_loop:
            sensor anchorDead anchorUnit @dead
            jump bind_poly_end equal anchorDead 1
            ubind @poly
            jump bind_poly_end equal @unit anchorUnit
            sensor unitFlag @unit @flag
            jump bind_poly_loop notEqual unitFlag 0
            sensor unitCtrl @unit @controlled
            jump bind_poly_loop greaterThanEq unitCtrl 2
            jump bind_continue always 0
    bind_poly_end:

    jump nextUnit equal setting @metaglass # metaglass setting = poly only

    bind_continue:
    ucontrol flag thisFlag

    # Set unit
    op add @counter @counter counterJump
        set unitRef1 @unit
        jump unitSet_end always 0
        set unitRef2 @unit
        jump unitSet_end always 0
        set unitRef3 @unit
        jump unitSet_end always 0
        set unitRef4 @unit
        jump unitSet_end always 0
        set unitRef5 @unit
        jump unitSet_end always 0
        set unitRef6 @unit
        jump unitSet_end always 0
        set unitRef7 @unit
        jump unitSet_end always 0
        set unitRef8 @unit
        jump unitSet_end always 0
        set unitRef9 @unit
    unitSet_end:
bind_end:

# approach here
ucontrol approach @thisx @thisy 5

nextUnit:
op add unitIndex unitIndex 1
op mod unitIndex unitIndex 9

jump start always 0


# Unbind and deflag
disabled:

set cachedSetting setting

ubind unitRef1
jump start equal @unit null
ucontrol flag 0
set unitRef1 null

ubind unitRef2
jump start equal @unit null
ucontrol flag 0
set unitRef2 null

ubind unitRef3
jump start equal @unit null
ucontrol flag 0
set unitRef3 null

ubind unitRef4
jump start equal @unit null
ucontrol flag 0
set unitRef4 null

ubind unitRef5
jump start equal @unit null
ucontrol flag 0
set unitRef5 null

ubind unitRef6
jump start equal @unit null
ucontrol flag 0
set unitRef6 null

ubind unitRef7
jump start equal @unit null
ucontrol flag 0
set unitRef7 null

ubind unitRef8
jump start equal @unit null
ucontrol flag 0
set unitRef8 null

ubind unitRef9
jump start equal @unit null
ucontrol flag 0
set unitRef9 null

jump start always 0
