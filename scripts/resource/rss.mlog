set min%ResPow 33
set min%ResItem 25
set maxCapResPower 1500000
set maxCapResItem 10000
set setLinkCoreByUnit true
op add MinInteractLink 0 3
op add valIgnoreMinResItemFac 0 0
op shl  false 0
op shl  false 1
op shl  false 2
op shl  false 3
op shl  false 4
op shl  false 5
op shl  false 6
op shl  false 7
op shl  false 8
op shl  false 9
op shl  false 10
op shl  false 11
op shl  false 12
op shl  false 13
op shl  false 14
op shl  false 15
getlink message 0
getlink node 1
print "-- Edit Above --"
edit:
jump edit notEqual "set true to run" true
op add bitSI  
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op add bitSI bitSI 
op equal linkMin setLinkCoreByUnit 0
op div minDecResPow min%ResPow 100
op div minDecResItem min%ResItem 100
op add linkMin MinInteractLink linkMin
op add valIgnoreMinResItemFac valIgnoreMinResItemFac linkMin

start:
op sub __et @time __pt
set __pt @time
sensor mType message @type
jump start notEqual mType @message

sensor nDead node @dead
jump nodeAlive equal nDead false
    print "[slate]Resources Management\n[sky]By Username\n\n[#ff]Error: None Linked Power Node\n\n[white]Link power node first\n\nnode : "
    print node
    printflush message
    jump start always 0
nodeAlive:

sensor sDead bStorage @dead
jump storageAlive equal sDead false
    jump storageGet_link equal setLinkCoreByUnit false
        ubind @mono
        ulocate building core 0 0 0 0 0
        jump storageGet_end always 0 0
    storageGet_link:
        getlink bStorage 2
    storageGet_end:
    print "[slate]Resources Management\n[sky]By Username\n\n[#ff]Error: None Linked Storage[white]\n\nCreate mono for auto link into core storage OR Link storage after link power node. & configure 'setLinkCoreByUnit'\n\nstorage : "
    print bStorage
    printflush message
    jump start always 0
storageAlive:

sensor npCap node @powerNetCapacity
sensor npStor node @powerNetStored
op min npCap npCap maxCapResPower
op div npStor npStor npCap
jump npstor_minDecResPow greaterThan npStor minDecResPow
    set enableBuildings 0
    op idiv npStor npStor 1e-10
    op div npStor npStor 1e8
    print "[slate]Resources Management\n[sky]By Username\n\n[#ff]⚠Warning: Low Stored Power[white]\n\n%  \n"
    print min%ResPow
    print " >=\n"
    print npStor
    print "\n"
    jump storagePrint_end always 0 0
npstor_minDecResPow:

sensor sCap bStorage @itemCapacity
op min sCap sCap maxCapResItem
set enableBuildings @links
set count 0
itemPrint_loop:
    op shl bitSIEnable 1 count
    op and bitSIEnable bitSI bitSIEnable
    jump itemPrint_con equal bitSIEnable 0

    lookup item itemType count
    sensor iVal bStorage itemType
    op div iVal iVal sCap
    jump itemPrint_con greaterThan iVal minDecResItem

    op idiv iVal iVal 1e-6
    op div iVal iVal 1e4
    jump something2 equal enableBuildings valIgnoreMinResItemFac
        set enableBuildings valIgnoreMinResItemFac
        print "[slate]Resources Management\n[sky]By Username\n\n[#ff]⚠Warning: Low Resources[white]\n\n% item stored\n"
        print min%ResItem
        print " >=\n"
    something2:
    print iVal
    op mul counterPItem count 2
    op add @counter counterPItem @counter
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
        jump itemPrint_con always 0 0
        print "\n"
    itemPrint_con:
    op add count count 1
jump itemPrint_loop lessThan count @itemCount

jump storagePrint_end notEqual enableBuildings @links
    print "[slate]Resources Management\n[sky]By Username\n\n[#00ff]All Requirements Are Met[white]\n\nstorage:"
    print bStorage
    print "\nnode: "
    print node
storagePrint_end:

jump something3 equal skipLoop @links
set count linkMin
something4:
    getlink buildings count
    op greaterThan enable enableBuildings count
    control enabled buildings enable 0 0 0
    op add count count 1
jump something4 lessThan count @links
something3:

set skipLoop enableBuildings
sensor p bStorage @phase-fabric
op greaterThan p p 50
jump something5 equal p true
    print "\n[#fff]⚠ []low  < 50, disabled "
something5:
op land p p enableBuildings
control enabled dome1 p 0 0 0
printflush message1
jump storageAlive always 0 0
set "Resource_Saver_by" "Username"
